"""empty message

Revision ID: 067b00c50c43
Revises: 
Create Date: 2023-02-23 12:45:02.904439

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = '067b00c50c43'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=40), nullable=False),
    sa.Column('last_name', sa.String(length=40), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('bio', sa.String(length=2000), nullable=False),
    sa.Column('profile_image', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('story', sa.String(), nullable=False),
    sa.Column('risks', sa.String(), nullable=False),
    sa.Column('goal', sa.Integer(), nullable=False),
    sa.Column('current_fund', sa.Integer(), nullable=False),
    sa.Column('backers', sa.Integer(), nullable=False),
    sa.Column('end_day', sa.String(), nullable=False),
    sa.Column('project_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pledges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pledge_name', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('ships_to', sa.String(), nullable=False),
    sa.Column('rewards', sa.String(), nullable=False),
    sa.Column('estimated_delivery', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projectImages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_pledges',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pledge_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pledge_id'], ['pledges.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'pledge_id')
    )

    if environment == "production":
      op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
      op.execute(f"ALTER TABLE projects SET SCHEMA {SCHEMA};")
      op.execute(f"ALTER TABLE pledges SET SCHEMA {SCHEMA};")
      op.execute(f"ALTER TABLE projectImages SET SCHEMA {SCHEMA};")
      op.execute(f"ALTER TABLE users_pledges SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_pledges')
    op.drop_table('projectImages')
    op.drop_table('pledges')
    op.drop_table('projects')
    op.drop_table('users')
    # ### end Alembic commands ###
